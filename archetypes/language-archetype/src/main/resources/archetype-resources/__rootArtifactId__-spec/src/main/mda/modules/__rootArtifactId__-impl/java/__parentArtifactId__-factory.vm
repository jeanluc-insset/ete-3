#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
package ${package}.ete.${parentArtifactId}.impl.factory;



import ${package}.ete.meta.model.core.PrimitiveDataTypes;
import ${package}.ete.meta.model.mofpackage.EteModel;
import static ${package}.ete.meta.model.mofpackage.EteModel.MODEL;
import ${package}.ete.meta.model.mofpackage.impl.EteModelImpl;
import static ${package}.ete.meta.model.types.MofType.MOF_TYPE;
import ${package}.ete.meta.model.types.impl.MofTypeImpl;
import ${package}.${parentArtifactId}.impl.*;
import javax.annotation.Generated;
import ${package}.util.factory.FactoryRegistry;



@Generated("ete - jean-luc@insset.fr  modules/maven-project/${parentArtifactId}-impl/java/${parentArtifactId}-factory.vm")
public class GelFactory {

    public static void registerFactories() {
        FactoryRegistry registry = FactoryRegistry.getRegistry();
        registry.registerDefaultFactory(MOF_TYPE, MofTypeImpl.class);
/*
${symbol_pound}foreach(${symbol_dollar}aClass in ${symbol_dollar}{current.classes})
    ${symbol_pound}if(${symbol_dollar}aClass.getValueOf("symbol"))
        registry.registerDefaultFactory("${symbol_dollar}{aClass.getValueOf("symbol")}", ${symbol_dollar}{aClass.package.name}.impl.${symbol_dollar}{aClass.name}Impl.class);        
    ${symbol_pound}end
    ${symbol_pound}if (${symbol_dollar}aClass.getValueOf("literalType"))
        registry.registerDefaultFactory("${symbol_dollar}{aClass.getValueOf("literalType")}", ${symbol_dollar}{aClass.name}Impl.class);                
    ${symbol_pound}end
${symbol_pound}end
*/
    }

    public static EteModel      newModel() throws InstantiationException, IllegalAccessException {
        FactoryRegistry registry = FactoryRegistry.getRegistry();
        registry.registerDefaultFactory(MOF_TYPE, MofTypeImpl.class);
        registry.registerDefaultFactory(MODEL, EteModelImpl.class);
        EteModel result = (EteModel) FactoryRegistry.newInstance(MODEL);
        PrimitiveDataTypes.init(result);
        return result;
    }

}



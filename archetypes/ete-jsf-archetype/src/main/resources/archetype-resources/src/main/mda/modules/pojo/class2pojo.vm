#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
package ${symbol_dollar}{current.owningPackage};



import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author jldeleage
 */
public class ${symbol_dollar}{current.name} ${symbol_pound}if (${symbol_dollar}{current.superClass.size()} > 0) extends ${symbol_dollar}{current.superClass.get(0).owningPackage.name}.${symbol_dollar}{current.superClass.get(0)} ${symbol_pound}end  implements Serializable {


${symbol_pound}foreach (${symbol_dollar}tagValue in ${symbol_dollar}{current.getTagValues().keySet()})
    public default String get${symbol_dollar}{dialect.i2uc(${symbol_dollar}tagValue.name)}() {
        return "${symbol_dollar}{current.getValueOf(${symbol_dollar}tagValue.name)}";
    }
${symbol_pound}end


    //========================================================================//

${symbol_pound}foreach (${symbol_dollar}aProperty in ${symbol_dollar}current.ownedAttribute)
    public ${symbol_dollar}dialect.mt2lt(${symbol_dollar}aProperty.type) get${symbol_dollar}{dialect.i2uc(${symbol_dollar}aProperty.name)}() {
        return ${symbol_dollar}{aProperty.name};
    }

    public void set${symbol_dollar}{dialect.i2uc(${symbol_dollar}aProperty.name)}(${symbol_dollar}{dialect.mt2lt(${symbol_dollar}aProperty.type)} inValue) {
        ${symbol_dollar}{aProperty.name} = inValue;
    }

${symbol_pound}if (${symbol_dollar}aProperty.type.collection)
    public void add${symbol_dollar}{dialect.i2uc(${symbol_dollar}aProperty.name)}(${symbol_dollar}{dialect.mt2lt(${symbol_dollar}aProperty.type.baseType)} inValue) {
        ${symbol_dollar}{aProperty.name}.add(inValue);
    }

    public void remove${symbol_dollar}{dialect.i2uc(${symbol_dollar}aProperty.name)}(${symbol_dollar}{dialect.mt2lt(${symbol_dollar}aProperty.type.baseType)} inValue) {
        ${symbol_dollar}{aProperty.name}.remove(inValue);
    }
${symbol_pound}end
${symbol_pound}end


    //========================================================================//


${symbol_pound}foreach (${symbol_dollar}aMethod in ${symbol_dollar}current.ownedOperation)
    public ${symbol_dollar}dialect.moft2lt(${symbol_dollar}aMethod.type.name) ${symbol_dollar}{aMethod.name}(${symbol_pound}foreach(${symbol_dollar}aParam in ${symbol_dollar}{aMethod.ownedParameter})${symbol_dollar}{aParam.type} ${symbol_dollar}{aParam.name} ${symbol_pound}end) {
${symbol_dollar}{dialect.getOperationBody(${symbol_dollar}aMethod, "    ")}
    }
${symbol_pound}end


    @Override
    public String toString() {
${symbol_pound}if (${symbol_dollar}current.ownedAttribute.size() > 0)
        return "" + ${symbol_dollar}{current.ownedAttribute.get(0)};
${symbol_pound}else
        return super.toString();
${symbol_pound}end
    }

    //========================================================================//

${symbol_pound}foreach (${symbol_dollar}aProperty in ${symbol_dollar}current.ownedAttribute)
    ${symbol_dollar}dialect.mt2lt(${symbol_dollar}aProperty.type)      ${symbol_dollar}{aProperty.name};
${symbol_pound}end



}
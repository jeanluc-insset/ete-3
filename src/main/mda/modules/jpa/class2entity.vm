package ${current.owningPackage}.model;



import java.io.Serializable;
import java.util.LinkedList;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlRootElement;

/**
 *
 * @author jldeleage
 */
@Entity
@XmlRootElement
public class ${current.name} implements Serializable {


    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }


    //========================================================================//


    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof ${current.name})) {
            return false;
        }
        ${current.name} other = (${current.name}) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }


    //========================================================================//


#foreach ($tagValue in ${current.getTagValues().keySet()})
    public default String get${dialect.i2uc($tagValue.name)}() {
        return "${current.getValueOf($tagValue.name)}";
    }
#end


    //========================================================================//

#foreach ($aProperty in $current.ownedAttribute)
    public $dialect.mt2lt($aProperty.type) get${dialect.i2uc($aProperty.name)}() {
        return ${aProperty.name};
    }

    public void set${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.type)} inValue) {
        ${aProperty.name} = inValue;
    }

#if ($aProperty.type.collection)
    public void add${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.type.baseType)} inValue) {
        ${aProperty.name}.add(inValue);
    }

    public void remove${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.type.baseType)} inValue) {
        ${aProperty.name}.remove(inValue);
    }
#end
#end


    //========================================================================//


#foreach ($aMethod in $current.ownedOperation)
    public $dialect.moft2lt($aMethod.type.name) ${aMethod.name}(#foreach($aParam in ${aMethod.ownedParameter})${aParam.type} ${aParam.name} #end) {
${dialect.getOperationBody($aMethod, "    ")}
    }
#end


    @Override
    public String toString() {
#if ($current.ownedAttribute.size() > 0)
        return "" + ${current.ownedAttribute.get(0)};
#else
        return super.toString();
#end
    }

    //========================================================================//

#foreach ($aProperty in $current.ownedAttribute)
    #if ($aProperty.type.hasStereotype("Entity"))
    @ManyToOne 
    #end
    #if ($aProperty.type.isCollection())
    #if ($aProperty.type.baseType.hasStereotype("Entity"))
    @OneToMany 
    #end
    #elseif ($aProperty.type.name == "date")
    @javax.persistence.Temporal(javax.persistence.TemporalType.DATE)
    #end
    $dialect.mt2lt($aProperty.type)      ${aProperty.name};
#end

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;


}
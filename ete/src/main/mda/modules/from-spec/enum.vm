package ${current.package.name};



#foreach ($aDependance in $current.dependencies)
import ${dialect.getQualifiedName($aDependance)};
#end
import java.util.List;
import java.util.Set;
import javax.annotation.Generated;


@Generated("ete - jean-luc@insset.fr  modules/basic_java/api/enum.vm")
public enum $current.name {

#foreach ($aLiteral in $current.ownedLiteral)
    ${aLiteral.name}#if( $foreach.hasNext ),#end
#end    ;


    //========================================================================//


#foreach ($aProperty in $current.ownedAttribute)
    public ${aProperty.type.name} get${aProperty.name.substring(0,1).toUpperCase()}${aProperty.name.substring(1)}();
    public void set${aProperty.name.substring(0,1).toUpperCase()}${aProperty.name.substring(1)}(${aProperty.type.name} inValue);
#if ($aProperty.type.collection)
    public void add${aProperty.name.substring(0,1).toUpperCase()}${aProperty.name.substring(1)}(${aProperty.type.baseType.name} inValue);
#end
#end

#foreach ($aMethod in $current.ownedOperation)
    public ${aMethod.type} ${aMethod.name}(#foreach($aParam in ${aMethod.parameters})${aParam.type} ${aParam.name} #end);
#end

}
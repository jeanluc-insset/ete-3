package ${current.owningPackage.name}.impl;

#foreach ($aDependance in $current.dependances)
import ${dialect.getQualifiedName($aDependance)};
#end
#if ($current.hasStereotype("collection_operation"))
import fr.insset.jeanluc.ete.meta.model.mofpackage.EteModel;
import fr.insset.jeanluc.ete.meta.model.types.MofType;
#end
import ${current.owningPackage.name}.*;
import java.util.Collection;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.annotation.Generated;


@Generated ("ete - jean-luc@insset.fr - template : ete/src/main/mda/modules/from-spec/class2Implementation.vm")
public#if($current.abstract) abstract#end class ${current.name}Impl #if (${current.superClass.size()} > 0) extends ${current.superClass.get(0).owningPackage.name}.impl.${current.superClass.get(0)}Impl #end implements ${current.name} {


    //========================================================================//


#foreach ($aProperty in $current.ownedAttribute)
#if ($aProperty.qualifierType)
    public ${dialect.mt2lt($aProperty.type)} get${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.qualifierType)} inKey) {
        return ${aProperty.name}.get(inKey);
    }
    public void set${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.qualifierType)} inKey, ${dialect.mt2lt($aProperty.type)} inValue) {
        ${aProperty.name}.put(inKey, inValue);
    }
#if ($aProperty.isCollection())
    public void add${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.qualifierType)} inKey, ${dialect.mt2lt($aProperty.type)} inValue) {
        // Collection<${dialect.mt2lt($aProperty.type.baseType)}> values = ${aProperty.name}.get(inKey);
        // if (values == null) {
        //     values = new LinkedList<>();
        //     ${aProperty.name}.put(inKey, values);
        // }
        // values.add(inValue);
    }
#end        ## isCollection
#else
#if($aProperty.name && $aProperty.type.name)
    public ${dialect.mt2lt($aProperty.type)} get${dialect.i2uc($aProperty.name)}() {
        return ${aProperty.name};
    }

    public void set${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.type)} inValue) {
        ${aProperty.name} = inValue;
    }
#if ($aProperty.isCollection())
    public void add${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.type.baseType)} inValue) {
        ${aProperty.name}.add(inValue);
    }
#end
#end
#end
#end

#if ($current.hasStereotype("collection_operation"))
    public MofType  getType(EteModel inModel) {
        return null;
    }
#end


#foreach ($aProperty in $current.ownedAttribute)

#end


    //========================================================================//


#foreach ($aProperty in $current.ownedAttribute)
#if($aProperty.name && $aProperty.type.name)
#if ($aProperty.qualifierType)
    private Map<${dialect.mt2lt($aProperty.qualifierType)}, ${dialect.mt2lt($aProperty.type)}> ${aProperty.name};
#else
    private ${dialect.mt2lt($aProperty.type)} ${aProperty.name};
#end
#end
#end


}


